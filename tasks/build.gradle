apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

dependencies {
    // Main Dependencies
    implementation "$kotlin_group:kotlin-stdlib-jdk8:$kotlin_version"
    cordaCompile "$corda_group:corda-core:$corda_release_version"
    cordaCompile "$corda_group:corda:$corda_release_version"
    cordaCompile "$corda_group:corda-node:$corda_release_version"

    cordapp project(":contract")
    cordapp project(":workflow")
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {

    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        cordapp project(":contract")
        cordapp project(":workflow")
        rpcUsers = [[user: "guest", "password": "letmein", "permissions": ["ALL"]]]
    }

    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        cordapps.clear()
    }

    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10004
        rpcSettings {
            address("localhost:10005")
            adminAddress("localhost:10045")
        }
    }

    node {
        name "O=PartyB,L=New York,C=US"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
    }

    node {
        name "O=PartyC,L=Paris,C=FR"
        p2pPort 10012
        rpcSettings {
            address("localhost:10013")
            adminAddress("localhost:10053")
        }
    }
}